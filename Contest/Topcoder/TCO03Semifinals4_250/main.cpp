#include<bits/stdc++.h>
#define ll long long 
#define FOR(i, a, b) for (int i = (a), _##i = (b); i <= _##i; ++i)
#define FORD(i, a, b) for (int i = (a), _##i = (b); i >= _##i; --i)
#define DEBUG(X) { auto _X = (X); cerr << "L" << __LINE__ << ": " << #X << " = " << (_X) << endl; };

using namespace std;

class AvoidRoads {
public:
	static const int MAX = 105;
	int t[MAX][MAX][2];
	long long dp[MAX][MAX];
	int w, h;

	long long numWays(int width, int height, vector <string> bad) {
		memset(t, 1, sizeof t);
		memset(dp, 0, sizeof dp);
		for (auto it : bad){
			stringstream ss(it);
			int a, b, c, d; 
			ss >> a >> b >> c >> d;
			if (a < c) { 
				t[b][a][0] = 0;
			} else if (b < d) {
				t[b][a][1] = 0;
			} else if (c < a) {
				t[d][c][0] = 0;
			} else if (d < b) {
				t[d][c][1] = 0;
			}
		}
		dp[0][0] = 1;
		for (int i = 0; i <= height; i++) {
			for (int j = 0; j <= width; j++) {
				if (t[i][j][1]) {
					dp[i + 1][j] += dp[i][j];
				}
				if (t[i][j][0]) {
					dp[i][j + 1] += dp[i][j];
				}
			}
		}
		return dp[height][width];
	}
};

// BEGIN KAWIGIEDIT TESTING
// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
bool KawigiEdit_RunTest(int testNum, int p0, int p1, vector <string> p2, bool hasAnswer, long long p3) {
	cout << "Test " << testNum << ": [" << p0 << "," << p1 << "," << "{";
	for (int i = 0; int(p2.size()) > i; ++i) {
		if (i > 0) {
			cout << ",";
		}
		cout << "\"" << p2[i] << "\"";
	}
	cout << "}";
	cout << "]" << endl;
	AvoidRoads *obj;
	long long answer;
	obj = new AvoidRoads();
	clock_t startTime = clock();
	answer = obj->numWays(p0, p1, p2);
	clock_t endTime = clock();
	delete obj;
	bool res;
	res = true;
	cout << "Time: " << double(endTime - startTime) / CLOCKS_PER_SEC << " seconds" << endl;
	if (hasAnswer) {
		cout << "Desired answer:" << endl;
		cout << "\t" << p3 << endl;
	}
	cout << "Your answer:" << endl;
	cout << "\t" << answer << endl;
	if (hasAnswer) {
		res = answer == p3;
	}
	if (!res) {
		cout << "DOESN'T MATCH!!!!" << endl;
	} else if (double(endTime - startTime) / CLOCKS_PER_SEC >= 2) {
		cout << "FAIL the timeout" << endl;
		res = false;
	} else if (hasAnswer) {
		cout << "Match :-)" << endl;
	} else {
		cout << "OK, but is it right?" << endl;
	}
	cout << "" << endl;
	return res;
}
int main() {
	bool all_right;
	all_right = true;
	
	int p0;
	int p1;
	vector <string> p2;
	long long p3;
	
	{
	// ----- test 0 -----
	p0 = 6;
	p1 = 6;
	string t2[] = {"0 0 0 1","6 6 5 6"};
			p2.assign(t2, t2 + sizeof(t2) / sizeof(t2[0]));
	p3 = 252ll;
	all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
	// ------------------
	}
	
	{
	// ----- test 1 -----
	p0 = 1;
	p1 = 1;
	p2.clear() /*{}*/;
	p3 = 2ll;
	all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
	// ------------------
	}
	
	{
	// ----- test 2 -----
	p0 = 35;
	p1 = 31;
	p2.clear() /*{}*/;
	p3 = 6406484391866534976ll;
	all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
	// ------------------
	}
	
	{
	// ----- test 3 -----
	p0 = 2;
	p1 = 2;
	string t2[] = {"0 0 1 0","1 2 2 2","1 1 2 1"};
			p2.assign(t2, t2 + sizeof(t2) / sizeof(t2[0]));
	p3 = 0ll;
	all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
	// ------------------
	}
	
	if (all_right) {
		cout << "You're a stud (at least on the example cases)!" << endl;
	} else {
		cout << "Some of the test cases had errors." << endl;
	}
	return 0;
}
